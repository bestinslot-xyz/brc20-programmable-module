{
    "compiler": {
        "version": "0.8.28+commit.7893614a"
    },
    "language": "Solidity",
    "output": {
        "abi": [
            {
                "inputs": [],
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "owner",
                        "type": "address"
                    }
                ],
                "name": "OwnableInvalidOwner",
                "type": "error"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "account",
                        "type": "address"
                    }
                ],
                "name": "OwnableUnauthorizedAccount",
                "type": "error"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "owner",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "spender",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "Approval",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "contract_address",
                        "type": "address"
                    }
                ],
                "name": "BRC20Created",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "previousOwner",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "newOwner",
                        "type": "address"
                    }
                ],
                "name": "OwnershipTransferred",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "from",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "Transfer",
                "type": "event"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "internalType": "address",
                        "name": "owner",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "spender",
                        "type": "address"
                    }
                ],
                "name": "allowance",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "internalType": "address",
                        "name": "spender",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "approve",
                "outputs": [
                    {
                        "internalType": "bool",
                        "name": "",
                        "type": "bool"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "internalType": "address",
                        "name": "account",
                        "type": "address"
                    }
                ],
                "name": "balanceOf",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "internalType": "address",
                        "name": "from",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "burn",
                "outputs": [
                    {
                        "internalType": "bool",
                        "name": "",
                        "type": "bool"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    }
                ],
                "name": "getTickerAddress",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "mint",
                "outputs": [
                    {
                        "internalType": "bool",
                        "name": "",
                        "type": "bool"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "owner",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "renounceOwnership",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "transfer",
                "outputs": [
                    {
                        "internalType": "bool",
                        "name": "",
                        "type": "bool"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "ticker",
                        "type": "bytes"
                    },
                    {
                        "internalType": "address",
                        "name": "from",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "transferFrom",
                "outputs": [
                    {
                        "internalType": "bool",
                        "name": "",
                        "type": "bool"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "newOwner",
                        "type": "address"
                    }
                ],
                "name": "transferOwnership",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "devdoc": {
            "details": "Implementation of the {IBRC20_Controller} interface.",
            "errors": {
                "OwnableInvalidOwner(address)": [
                    {
                        "details": "The owner is not a valid owner account. (eg. `address(0)`)"
                    }
                ],
                "OwnableUnauthorizedAccount(address)": [
                    {
                        "details": "The caller account is not authorized to perform an operation."
                    }
                ]
            },
            "events": {
                "Approval(bytes,address,address,uint256)": {
                    "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
                },
                "BRC20Created(bytes,address)": {
                    "details": "Emitted when a ticker is deposited the first time"
                },
                "Transfer(bytes,address,address,uint256)": {
                    "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
                }
            },
            "kind": "dev",
            "methods": {
                "allowance(bytes,address,address)": {
                    "details": "See {IBRC20_Controller-allowance}."
                },
                "approve(bytes,address,uint256)": {
                    "details": "See {IBRC20_Controller-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
                },
                "balanceOf(bytes,address)": {
                    "details": "See {IBRC20_Controller-balanceOf}."
                },
                "constructor": {
                    "details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
                },
                "owner()": {
                    "details": "Returns the address of the current owner."
                },
                "renounceOwnership()": {
                    "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                },
                "transfer(bytes,address,uint256)": {
                    "details": "See {IBRC20_Controller-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
                },
                "transferFrom(bytes,address,address,uint256)": {
                    "details": "See {IBRC20_Controller-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
                },
                "transferOwnership(address)": {
                    "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                }
            },
            "version": 1
        },
        "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
        }
    },
    "settings": {
        "compilationTarget": {
            "BRC20_Controller.sol": "BRC20_Controller"
        },
        "evmVersion": "cancun",
        "libraries": {},
        "metadata": {
            "bytecodeHash": "ipfs"
        },
        "optimizer": {
            "enabled": true,
            "runs": 10000
        },
        "remappings": []
    },
    "sources": {
        "BRC20_Controller.sol": {
            "keccak256": "0x09c3b4e26c2ca1e1899f6dcaa7402790d1342609381f36b128eb67662550ea76",
            "license": "MIT",
            "urls": [
                "bzz-raw://f97546fbfd7b9d451a57122b08da42da6b1a88d2b1116e00d1a6c5ab43c28653",
                "dweb:/ipfs/QmT9Z9iYDHiVjGR6qXYvcrKcipqbMDLnUNjBMa79y9mNJu"
            ]
        },
        "IBRC20_Controller.sol": {
            "keccak256": "0x3ffe8502a56ad2da6aa04f957b9a70c366955e598465ac8578a6d60e29b29cf2",
            "license": "MIT",
            "urls": [
                "bzz-raw://fd8537aab09ea503dfd981321df16f310a45545c62df950633b51c12a249717d",
                "dweb:/ipfs/QmcxNXc2CeFjpuzTVHmMuz4jFqjPoAuPN8pMaVfGQKnM7h"
            ]
        },
        "access/Ownable.sol": {
            "keccak256": "0x43eec93e9bc75693761098ac8ab3dfeb60dd2bb205096883952bde43ba634998",
            "license": "MIT",
            "urls": [
                "bzz-raw://8d83694cc9164a2cd7bf504b23782c18d2bc6d1694b9cc84e90b98df6e8e89ea",
                "dweb:/ipfs/QmNTFRv1nrZndRQXEBJ6xwVBohnEnUq3bX8CSkmSWAPPDD"
            ]
        },
        "interfaces/IERC20.sol": {
            "keccak256": "0x91104f4bcc877f2506e4485b871efe0a6beb5c1ef7de9c374d99d75289905905",
            "license": "MIT",
            "urls": [
                "bzz-raw://57a7ecbec5ff542c117d36c7487386b5653ad21d0a83414e859d4202e069b36f",
                "dweb:/ipfs/QmaPocSUaysdjd1Ksa5kttxRHxhA7XWd6HrQ9teLFRyR6W"
            ]
        },
        "interfaces/IERC20Metadata.sol": {
            "keccak256": "0x38821ee4c1716c97a4f1551a59824735552c714a63a6e875717a198f52d0c07b",
            "license": "MIT",
            "urls": [
                "bzz-raw://0b130180d0b3426a0b1ebc6266536497c4975c990ef0c62e318149d51bf5fde4",
                "dweb:/ipfs/QmVn7LXXYGjHayWiCrAkKQR2K2qhUYSYXRBsM6acLQS67F"
            ]
        },
        "interfaces/draft-IERC6093.sol": {
            "keccak256": "0x99d2a5a402dc0093e2f4580fd22ce02e3b0e7601dfeb685a73242dbc7dbb0987",
            "license": "MIT",
            "urls": [
                "bzz-raw://dc35b2baddee259793af3239b9a08d54648e439a8e4340fd2dc61a87211560aa",
                "dweb:/ipfs/QmTXTKZnQ5qc17F8ZfxA5L3vor5QAz9td5RZY5oabAR3AZ"
            ]
        },
        "utils/Context.sol": {
            "keccak256": "0xd609ca3ca31cf5566b56577e8263d2141015caadc262d9a0c0a44cf9ea0185fd",
            "license": "MIT",
            "urls": [
                "bzz-raw://697af9721cf988db98747ea4b7e2e8b61cac7eeab226d019d0a00edd253476e8",
                "dweb:/ipfs/QmSUTcVtr2ipFFzk1KnWxgHp8WT1kQJgmmBViHVCuY4pVd"
            ]
        }
    },
    "version": 1
}